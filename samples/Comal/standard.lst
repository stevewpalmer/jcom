 9000 MODULE standard
 9010 EXPORT file'exists
 9020 EXPORT type
 9030 EXPORT clearkeys
 9040 EXPORT clearlines
 9050 EXPORT number
 9060 EXPORT getkey$
 9070 EXPORT getvalidkey$
 9080 EXPORT stripchar$
 9090 EXPORT getinfile
 9100 EXPORT getoutfile
 9110 EXPORT getfiles
 9120 EXPORT quicksort
 9130 EXPORT quicksortnum
 9140 EXPORT center
 9150 EXPORT center'at
 9160 EXPORT waitkey
 9170 EXPORT yes
 9180 EXPORT version'standard$
 9190 EXPORT pause
 9200
 9210 FUNC version'standard$ CLOSED
 9220   RETURN " 1.17 Standard package by Lindsay & Warman"
 9230 ENDFUNC
 9240
 9250 FUNC file'exists(filename$) CLOSED
 9260   TRAP
 9270     f:=FREEFILE
 9280     OPEN FILE f, filename$, READ
 9290     CLOSE FILE f
 9300     RETURN TRUE
 9310   HANDLER
 9320     TRAP
 9330       CLOSE FILE f
 9340     HANDLER
 9350       NULL
 9360     ENDTRAP
 9370     RETURN FALSE
 9380   ENDTRAP
 9390 ENDFUNC
 9400
 9410 PROC type(filename$) CLOSED
 9420   IMPORT waitkey
 9430   IMPORT file'exists
 9440   IF file'exists(filename$) THEN
 9450     f#:=FREEFILE
 9460     OPEN FILE f#, filename$, READ
 9470     WHILE NOT(EOF(f#)) DO
 9480       DIM a$ OF 1, reply$ OF 1
 9490       a$:=GET$(f#,1)
 9500       CASE ORD(a$) OF
 9510         WHEN 13 // cr
 9520         NULL // ignore them
 9530         WHEN 10 // lf
 9540         PRINT // go TO ENDFOR line
 9550         OTHERWISE
 9560         PRINT a$, // PRINT all other characters
 9570       ENDCASE
 9580       reply$:=KEY$
 9590       IF reply$=CHR$(27) THEN //ESC key TO END
 9600         CLOSE FILE f#
 9610         PRINT
 9620         RETURN
 9630       ELIF reply$>"" THEN //any key TO pause
 9640         waitkey
 9650       ENDIF
 9660     ENDWHILE
 9670     CLOSE FILE f#
 9680   ELSE
 9690     PRINT "File not found."
 9700   ENDIF
 9710 ENDPROC
 9720
 9730 PROC clearkeys CLOSED // clear keyboard buffer
 9740   WHILE KEY$>"" DO NULL
 9750 ENDPROC
 9760
 9770 PROC clearlines(row1, row2) CLOSED
 9780   FOR x#:=row1 TO row2 DO
 9790     CURSOR x#,1
 9800     PRINT SPC$(79);
 9810   ENDFOR
 9820 ENDPROC
 9830
 9840 FUNC getkey$ CLOSED //like KEY$ but no blinking CURSOR
 9850   IMPORT clearkeys
 9860   clearkeys
 9870   REPEAT
 9880     DIM reply$ OF 1
 9890     reply$:=KEY$
 9900   UNTIL reply$>CHR$(0)
 9910   RETURN reply$
 9920 ENDFUNC
 9930
 9940 FUNC getvalidkey$(valid$) CLOSED
 9950   IMPORT clearkeys
 9960   clearkeys
 9970   REPEAT
 9980     DIM reply$ OF 1
 9990     reply$:=KEY$
10000   UNTIL reply$ IN valid$
10010   RETURN reply$
10020 ENDFUNC
10030
10040 FUNC stripchar$(text$, char$) CLOSED
10050   length:=LEN(text$)
10060   IF text$=char$ THEN
10070     RETURN ""
10080   ELIF text$(length:length)=char$ THEN
10090     RETURN stripchar$(text$(:length-1), char$)
10100   ELSE
10110     RETURN text$
10120   ENDIF
10130 ENDFUNC
10140
10150 FUNC number(text$) CLOSED //returns TRUE IF text$ is a number
10160   TRAP
10170     x:=VAL(text$)
10180     RETURN TRUE
10190   HANDLER
10200     RETURN FALSE
10210   ENDTRAP
10220 ENDFUNC
10230
10240 PROC quicksort(REF a$(), m, n) CLOSED
10250   part(m, n, m, n)
10260   PROC part(l, r, i, j) CLOSED
10270     DIM p$ OF 255
10280     p$:=a$((l+r) DIV 2)
10290     REPEAT
10300       WHILE p$>a$(i) DO i:+1
10310       WHILE p$<a$(j) DO j:-1
10320       IF i<=j THEN
10330         swap(a$(i), a$(j))
10340         i:+1; j:-1
10350       ENDIF
10360     UNTIL i>j
10370     IF l<j THEN part(l, j, l, j)
10380     IF i<r THEN part(i, r, i, r)
10390   ENDPROC
10400   PROC swap(REF a$, REF b$) CLOSED
10410     DIM buff$ OF 255
10420     buff$:=a$; a$:=b$; b$:=buff$
10430   ENDPROC
10440 ENDPROC
10450
10460 PROC quicksortnum(REF a(), m, n) CLOSED
10470   part'num(m, n, m, n)
10480   PROC part'num(l, r, i, j) CLOSED
10490     p:=a((l+r) DIV 2)
10500     REPEAT
10510       WHILE p>a(i) DO i:+1
10520       WHILE p<a(j) DO j:-1
10530       IF i<=j THEN
10540         swap'num(a(i), a(j))
10550         i:+1; j:-1
10560       ENDIF
10570     UNTIL i>j
10580     IF l<j THEN part'num(l, j, l, j)
10590     IF i<r THEN part'num(i, r, i, r)
10600   ENDPROC
10610   PROC swap'num(REF a, REF b) CLOSED
10620     buff:=a; a:=b; b:=buff
10630   ENDPROC
10640 ENDPROC
10650
10660 FUNC yes(prompt$) CLOSED
10670   IMPORT getvalidkey$
10680   PRINT prompt$
10690   DIM reply$ OF 1
10700   reply$:=getvalidkey$("yYnN")
10710   IF reply$ IN "Yy" THEN
10720     PRINT "YES"
10730   ELSE
10740     PRINT "NO"
10750   ENDIF
10760   RETURN reply$ IN "Yy"
10770 ENDFUNC
10780
10790 PROC center(text$) CLOSED
10800   IMPORT center'at
10810   center'at(CURROW, text$)
10820   IF LEN(text$)<=79 THEN PRINT // NEW line
10830 ENDPROC
10840
10850 PROC center'at(row, text$) CLOSED
10860   CURSOR row,1
10870   IF LEN(text$)>79 THEN
10880     PRINT text$
10890   ELSE
10900     PRINT TAB(1+((80-LEN(text$)) DIV 2)),text$,
10910   ENDIF
10920 ENDPROC
10930
10940 PROC getinfile(REF infile$) CLOSED
10950   IMPORT pause,clearlines
10960   IMPORT file'exists
10970   r:=CURROW
10980   REPEAT
10990     REPEAT
11000       INPUT AT r,1: "Please enter the INPUT filename: ": infile$
11010     UNTIL LEN(infile$)>0 //must have some name
11020     clearlines(r, r) // erase INPUT line
11030     IF file'exists(infile$) THEN
11040       ok:=TRUE
11050     ELSE
11060       ok:=FALSE
11070       PRINT AT r,1: "FILE NOT FOUND in directory! Press a key to retry...",
11080       pause
11090       clearlines(r, r) // clear ERR msg
11100     ENDIF
11110   UNTIL ok
11120   PRINT AT r,1: "INPUT  filename is:";infile$
11130 ENDPROC
11140
11150 PROC getoutfile(REF outfile$) CLOSED
11160   IMPORT clearlines
11170   IMPORT file'exists,getvalidkey$
11180   IMPORT clearkeys
11190   r:=CURROW
11200   REPEAT
11210     REPEAT
11220       INPUT AT r,1: "Please enter the OUTPUT filename: ": outfile$
11230     UNTIL LEN(outfile$)>0 //must have some name
11240     clearlines(r, r)
11250     IF file'exists(outfile$) THEN
11260       ok:=FALSE
11270       PRINT AT r,1: outfile$;"EXIST!  Replace it?",
11280       DIM reply$ OF 1
11290       reply$:=getvalidkey$("YyNn")
11300       clearlines(r, r) //erase msg
11310       IF reply$ IN "yY" THEN ok:=TRUE
11320       clearkeys
11330     ELSE
11340       ok:=TRUE
11350     ENDIF
11360   UNTIL ok
11370   PRINT AT r,1: "OUTPUT filename is:";outfile$
11380 ENDPROC
11390
11400 PROC getfiles(REF infile$, REF outfile$) CLOSED
11410   IMPORT pause,clearlines,UPPER$
11420   IMPORT getinfile,getoutfile
11430   row:=CURROW
11440   REPEAT
11450     CURSOR row,1
11460     getinfile(infile$)
11470     getoutfile(outfile$)
11480     IF UPPER$(infile$)<>UPPER$(outfile$) THEN
11490       ok:=TRUE
11500     ELSE
11510       ok:=FALSE
11520       clearlines(row, row+1) //erase IN & out lines
11530       PRINT AT row,1: "Filenames must be different! Press a key to retry ...",
11540       pause
11550       clearlines(row, row)
11560     ENDIF
11570   UNTIL ok
11580 ENDPROC
11590
11600 PROC waitkey CLOSED
11610   IMPORT pause
11620   DIM msg$ OF 32
11630   r:=CURROW; c:=CURCOL; msg$:=" << Press a key to continue >> "
11640   PRINT msg$,
11650   pause
11660   IF r=CURROW AND CURCOL<c THEN r:-1 // screen scrolled
11670   PRINT AT r,c: SPC$(LEN(msg$)), // overwrites msg
11680   CURSOR r,c // back TO where we started
11690 ENDPROC
11700
11710 PROC pause CLOSED
11720   DIM k$ OF 1
11730   k$:=KEY$
11740 ENDPROC
11750
11760 FUNC lower$(text$) CLOSED
11770   FOR x:=1 TO LEN(text$) DO
11780     num:=ORD(text$(x:x))
11790     IF num>=65 AND num<=90 THEN
11800       num:+32
11810     ENDIF
11820     text$(x:x):=CHR$(num)
11830   ENDFOR x
11840   RETURN text$
11850 ENDFUNC lower$
11860
11870 FUNC upper$(text$) CLOSED
11880   FOR x:=1 TO LEN(text$) DO
11890     num:=ORD(text$(x:x))
11900     IF num>=97 AND num<=122 THEN
11910       num:-32
11920     ENDIF
11930     text$(x:x):=CHR$(num)
11940   ENDFOR x
11950   RETURN text$
11960 ENDFUNC upper$
11970 ENDMODULE
